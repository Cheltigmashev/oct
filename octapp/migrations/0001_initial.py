# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-25 07:06
from __future__ import unicode_literals

import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True, verbose_name='Наименование категории')),
                ('confirmed', models.BooleanField(default=False, verbose_name='Категория подтверждена')),
            ],
            options={
                'permissions': (('confirm_category', 'Can confirm_category'),),
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Содержимое комментария')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Дата создания комментария')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь-автор комментария')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['created_date'],
            },
        ),
        migrations.CreateModel(
            name='ResultScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, verbose_name='Наименование шкалы')),
                ('scale_divisions_amount', models.IntegerField(default=0, verbose_name='Количество возможных оценок')),
                ('divisions_layout', models.CharField(help_text="например, для 2-бальной шкалы (зачтено, незачтено) разметка делений может быть <q>'40,60'</q>", max_length=80, verbose_name='Разметка делений шкалы -- процентные доли каждого деления через запятую')),
            ],
            options={
                'verbose_name': 'Оценочная шкала',
                'verbose_name_plural': 'Оценочные шкалы',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anonymous_loader', models.BooleanField(default=False, verbose_name='Анонимный тест. На странице теста не будет указан пользователь, который загрузил тест.')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Наименование теста')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(default='Описание теста отсутствует...', verbose_name='Описание теста')),
                ('controlling', models.BooleanField(default=False, verbose_name='Использование контроля прохождения теста')),
                ('time_restricting', models.IntegerField(blank=True, null=True, verbose_name='Ограничение времени прохождения теста в минутах')),
                ('rating', models.IntegerField(default=0, editable=False, verbose_name='Рейтинг теста')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, editable=False, verbose_name='Дата создания')),
                ('published_date', models.DateTimeField(blank=True, editable=False, null=True, verbose_name='Дата публикации')),
                ('ready_for_passing', models.BooleanField(default=False, editable=False, verbose_name='Готовность теста для прохождения другими пользователями')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, загрузивший тест')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='octapp.Category', verbose_name='Категория теста')),
                ('result_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tests', to='octapp.ResultScale', verbose_name='Оценочная шкала теста')),
            ],
            options={
                'verbose_name': 'Тест',
                'verbose_name_plural': 'Тесты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Test_rate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(verbose_name='Тест понравился? Если True — +1 к рейтингу, иначе — -1 к рейтингу')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь, к которому относится данная пользовательская оценка (рейтинг)')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='octapp.Test', verbose_name='Тест, к которому относится данная пользовательская оценка (рейтинг)')),
            ],
            options={
                'verbose_name': 'Оценка тестов',
                'verbose_name_plural': 'Оценки тестов',
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='octapp.Test', verbose_name='Тест, к которому относится комментарий'),
        ),
    ]
